plugins {
    id 'org.springframework.boot' version '2.1.4.RELEASE'
    id 'java'
}

repositories {
    mavenCentral()
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.6'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'

    compile 'org.springframework.boot:spring-boot-starter-web:2.1.4.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-thymeleaf:2.1.4.RELEASE'

    implementation 'com.healthlx.smartonfhir:config:0.3'

    developmentOnly 'org.springframework.boot:spring-boot-devtools:2.1.4.RELEASE'

    compile 'ca.uhn.hapi.fhir:hapi-fhir-structures-r4:4.0.3'
    compile 'ca.uhn.hapi.fhir:hapi-fhir-client:4.0.3'

    testCompile 'org.springframework.boot:spring-boot-starter-test:2.1.4.RELEASE'
}

group = 'org.hl7.davinci.alerts.refimpl'
version = '0.0.1-SNAPSHOT'
description = ''


sourceCompatibility = '1.8'
targetCompatibility = '1.8'

task resolveDependencies(group: "build setup", description: "Resolve and prefetch dependencies") {
    doLast {
        def resolve = {
            ConfigurationContainer configurations ->Ð†
                configurations
                        .findAll({ Configuration c -> c.isCanBeResolved() })
                        .each({ c -> c.resolve() })
        }
        project.rootProject.allprojects.each { subProject ->
            resolve(subProject.buildscript.configurations)
            resolve(subProject.configurations)
        }
    }
}